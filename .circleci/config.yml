version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      
      # Cache Node.js dependencies
      - restore_cache:
          keys:
            - v1-node-modules-{{ checksum "package-lock.json" }}
            - v1-node-modules-
      
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: awscli
          command: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                   unzip awscliv2.zip
                   sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
      
      - save_cache:
          paths:
            - node_modules
          key: v1-node-modules-{{ checksum "package-lock.json" }}

     

      # Build Docker image
      - setup_remote_docker:
         version: edge

      - run:
          name: Build Docker Image
          command: docker build -t wpadmin2 .

      # Authenticate Docker with AWS ECR
      - run:
          name: Authenticate with AWS ECR
          command: |
            aws --version
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 767888781477.dkr.ecr.ap-south-1.amazonaws.com

      # Push Docker image to AWS ECR
      - run:
          name: Push Docker Image to ECR
          command: docker push 767888781477.dkr.ecr.ap-south-1.amazonaws.com/wpadmin2:latest

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout

      # Update ECS service to use the new Docker image
      - run:
          name: Update ECS Service with new Docker Image
          command: |
            aws ecs update-service \
            --cluster demo-cluster2 \
            --service todosvc \
            --force-new-deployment \
            --region ap-south-1

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
